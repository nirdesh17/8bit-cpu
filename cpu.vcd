$date
	Fri Aug 30 10:59:01 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module program_counter $end
$var wire 1 ! clk $end
$var wire 1 " enable $end
$var wire 1 # reset $end
$var reg 8 $ pc [7:0] $end
$upscope $end
$scope module tb_cpu $end
$var wire 8 % result [7:0] $end
$var reg 1 & clk $end
$var reg 16 ' instr [15:0] $end
$var reg 1 ( reset $end
$scope module uut $end
$var wire 1 & clk $end
$var wire 16 ) instr [15:0] $end
$var wire 1 ( reset $end
$var wire 8 * operand1 [7:0] $end
$var wire 8 + data_out [7:0] $end
$var wire 8 , alu_result [7:0] $end
$var reg 8 - addr [7:0] $end
$var reg 3 . alu_op [2:0] $end
$var reg 4 / dest_reg [3:0] $end
$var reg 8 0 operand2 [7:0] $end
$var reg 8 1 reg_write_data [7:0] $end
$var reg 8 2 result [7:0] $end
$var reg 1 3 write_enable $end
$scope module alu_inst $end
$var wire 1 4 enable $end
$var wire 8 5 operand2 [7:0] $end
$var wire 3 6 operation [2:0] $end
$var wire 8 7 operand1 [7:0] $end
$var reg 8 8 result [7:0] $end
$upscope $end
$scope module mem_inst $end
$var wire 8 9 addr [7:0] $end
$var wire 1 & clk $end
$var wire 8 : data_in [7:0] $end
$var wire 1 3 write_enable $end
$var reg 8 ; data_out [7:0] $end
$var integer 32 < i [31:0] $end
$upscope $end
$scope module reg_file $end
$var wire 1 & clk $end
$var wire 4 = read_reg1 [3:0] $end
$var wire 8 > write_data [7:0] $end
$var wire 1 3 write_enable $end
$var reg 8 ? read_data1 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ?
bx >
bx =
b100000000 <
bx ;
bx :
bx 9
b0 8
bx 7
b0 6
bx 5
14
03
b0 2
bx 1
bx 0
bx /
b0 .
bx -
b0 ,
bx +
bx *
b0 )
1(
b0 '
0&
b0 %
bx $
z#
z"
z!
$end
#5
b0 *
b0 7
b0 ?
b0 1
b0 :
b0 >
b0 /
b0 =
13
0(
1&
#10
b100 '
b100 )
0&
#15
b100 1
b100 :
b100 >
1&
#20
0&
#25
b100 *
b100 7
b100 ?
1&
#30
b1 .
b1 6
0&
b1000000000010 '
b1000000000010 )
#35
b10 -
b10 9
1&
#40
0&
#45
1&
#50
b10 .
b10 6
0&
b10000100000010 '
b10000100000010 )
#55
b100 +
b100 ;
b0 *
b0 7
b0 ?
bx 1
bx :
bx >
b1 /
b1 =
bx %
bx 2
03
1&
#60
0&
#65
bx *
bx 7
bx ?
b100 1
b100 :
b100 >
b100 %
b100 2
1&
#70
bx ,
bx 8
b11 .
b11 6
0&
b11000100000111 '
b11000100000111 )
#75
b1011 ,
b1011 8
b100 *
b100 7
b100 ?
bx 1
bx :
bx >
bx %
bx 2
13
b111 0
b111 5
1&
#80
0&
#85
bx ,
bx 8
bx *
bx 7
bx ?
b1011 1
b1011 :
b1011 >
b1011 %
b1011 2
1&
