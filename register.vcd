$date
	Tue Aug 27 16:14:10 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module register_tb $end
$var wire 8 ! read_data2 [7:0] $end
$var wire 8 " read_data1 [7:0] $end
$var reg 1 # clk $end
$var reg 3 $ read_reg1 [2:0] $end
$var reg 3 % read_reg2 [2:0] $end
$var reg 8 & write_data [7:0] $end
$var reg 1 ' write_enable $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 3 ( read_reg1 [2:0] $end
$var wire 3 ) read_reg2 [2:0] $end
$var wire 8 * write_data [7:0] $end
$var wire 1 ' write_enable $end
$var reg 8 + read_data1 [7:0] $end
$var reg 8 , read_data2 [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 ,
b1 +
b0 *
b1 )
b0 (
0'
b0 &
b1 %
b0 $
0#
b1 "
b10 !
$end
#5
1#
#10
b10 "
b10 +
0#
b1 $
b1 (
1'
b10101010 &
b10101010 *
#15
b10101010 !
b10101010 ,
b10101010 "
b10101010 +
1#
#20
b1 !
b1 ,
0#
b0 %
b0 )
0'
#25
1#
#30
b11 "
b11 +
0#
b10 $
b10 (
1'
b11110000 &
b11110000 *
#35
b11110000 "
b11110000 +
1#
#40
b10101010 !
b10101010 ,
0#
b1 %
b1 )
0'
#45
1#
#50
0#
#55
1#
#60
0#
#65
1#
#70
0#
